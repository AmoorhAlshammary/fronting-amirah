{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { base, A } from './Firebase/Config';\n\nconst useStorage = file => {\n  _s();\n\n  const [progress, setProgress] = useState(0);\n  const [error, setError] = useState(null);\n  const [url, setUrl] = useState(null);\n  useEffect(() => {\n    const storaged = base.ref(file.name);\n    const collectiond = A.collection('images');\n    storaged.put(file).on('state_changed', snap => {\n      let img = snap.bytesTransferred / snap.totalBytes * 100;\n      setProgress(img);\n    }, err => {\n      setError(err);\n    }, async () => {\n      const url = await storaged.getDownloadURL();\n      await collectiond.add({\n        url\n      });\n      setUrl(url);\n    });\n  }, [file]);\n  return {\n    progress,\n    url,\n    error\n  };\n};\n\n_s(useStorage, \"xn2AiAzche7NzWswJ7VS1PhvjkU=\");\n\nexport default useStorage;","map":{"version":3,"sources":["C:/Users/laser/Desktop/fronting-amirah/src/useStorage.js"],"names":["useState","useEffect","base","A","useStorage","file","progress","setProgress","error","setError","url","setUrl","storaged","ref","name","collectiond","collection","put","on","snap","img","bytesTransferred","totalBytes","err","getDownloadURL","add"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAAQC,IAAR,EAAaC,CAAb,QAAqB,mBAArB;;AAEA,MAAMC,UAAU,GAAIC,IAAD,IAAU;AAAA;;AAC3B,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,CAAD,CAAxC;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACU,GAAD,EAAMC,MAAN,IAAgBX,QAAQ,CAAC,IAAD,CAA9B;AAEAC,EAAAA,SAAS,CAAC,MAAM;AAEd,UAAMW,QAAQ,GAAGV,IAAI,CAACW,GAAL,CAASR,IAAI,CAACS,IAAd,CAAjB;AACA,UAAMC,WAAW,GAAGZ,CAAC,CAACa,UAAF,CAAa,QAAb,CAApB;AAEAJ,IAAAA,QAAQ,CAACK,GAAT,CAAaZ,IAAb,EAAmBa,EAAnB,CAAsB,eAAtB,EAAwCC,IAAD,IAAU;AAC/C,UAAIC,GAAG,GAAID,IAAI,CAACE,gBAAL,GAAwBF,IAAI,CAACG,UAA9B,GAA4C,GAAtD;AACAf,MAAAA,WAAW,CAACa,GAAD,CAAX;AACD,KAHD,EAGIG,GAAD,IAAS;AACVd,MAAAA,QAAQ,CAACc,GAAD,CAAR;AACD,KALD,EAKG,YAAY;AACb,YAAMb,GAAG,GAAG,MAAME,QAAQ,CAACY,cAAT,EAAlB;AACA,YAAMT,WAAW,CAACU,GAAZ,CAAgB;AAAEf,QAAAA;AAAF,OAAhB,CAAN;AACAC,MAAAA,MAAM,CAACD,GAAD,CAAN;AACD,KATD;AAUD,GAfQ,EAeN,CAACL,IAAD,CAfM,CAAT;AAiBA,SAAO;AAAEC,IAAAA,QAAF;AAAYI,IAAAA,GAAZ;AAAiBF,IAAAA;AAAjB,GAAP;AACD,CAvBD;;GAAMJ,U;;AAyBN,eAAeA,UAAf","sourcesContent":["import { useState, useEffect } from 'react';\r\nimport {base,A} from './Firebase/Config';\r\n\r\nconst useStorage = (file) => {\r\n  const [progress, setProgress] = useState(0);\r\n  const [error, setError] = useState(null);\r\n  const [url, setUrl] = useState(null);\r\n\r\n  useEffect(() => {\r\n\r\n    const storaged = base.ref(file.name);\r\n    const collectiond = A.collection('images');\r\n    \r\n    storaged.put(file).on('state_changed', (snap) => {\r\n      let img = (snap.bytesTransferred / snap.totalBytes) * 100;\r\n      setProgress(img);\r\n    }, (err) => {\r\n      setError(err);\r\n    }, async () => {\r\n      const url = await storaged.getDownloadURL();\r\n      await collectiond.add({ url });\r\n      setUrl(url);\r\n    });\r\n  }, [file]);\r\n\r\n  return { progress, url, error };\r\n}\r\n\r\nexport default useStorage;"]},"metadata":{},"sourceType":"module"}